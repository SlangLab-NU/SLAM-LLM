hydra:
  run:
    dir: /work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm/out/psst_phoneme_w2v2_llama32_1b_linear_peft_unfreeze_encoder
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.run.dir=/work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm/out/psst_phoneme_w2v2_llama32_1b_linear_peft_unfreeze_encoder
    - hydra.mode=RUN
    task:
    - ++model_config.llm_name=llama32_1b
    - ++model_config.llm_path=/work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm/models/Llama-3.2-1B-Instruct
    - ++model_config.llm_dim=2048
    - ++model_config.encoder_name=w2v2
    - ++model_config.normalize=true
    - ++dataset_config.normalize=true
    - ++model_config.encoder_projector_ds_rate=5
    - ++model_config.encoder_path=vitouphy/wav2vec2-xls-r-300m-timit-phoneme
    - ++model_config.encoder2_name=
    - ++model_config.encoder2_path=
    - ++model_config.encoder_dim=1024
    - ++model_config.encoder_projector=linear
    - ++dataset_config.dataset=speech_dataset
    - ++dataset_config.train_data_path=/work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm/data/psst_phoneme/train.jsonl
    - ++dataset_config.file=src/slam_llm/datasets/speech_dataset.py:get_speech_dataset
    - ++dataset_config.val_data_path=/work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm/data/psst_phoneme/validation.jsonl
    - ++dataset_config.input_type=raw
    - ++train_config.model_name=asr
    - ++train_config.num_epochs=10
    - ++train_config.freeze_encoder=false
    - ++train_config.freeze_encoder2=true
    - ++train_config.freeze_llm=false
    - ++train_config.batching_strategy=custom
    - ++train_config.warmup_steps=1000
    - ++train_config.total_steps=100000
    - ++train_config.lr=1e-4
    - ++train_config.validation_interval=3000
    - ++train_config.batch_size_training=1
    - ++train_config.val_batch_size=1
    - ++train_config.num_workers_dataloader=1
    - ++train_config.output_dir=/work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm/out/psst_phoneme_w2v2_llama32_1b_linear_peft_unfreeze_encoder
    - ++train_config.use_fp16=true
    - ++train_config.use_peft=true
    - ++train_config.resume_epoch=1
    - ++train_config.resume_step=0
    - ++log_config.use_wandb=true
    - ++log_config.wandb_exp_name=psst_phoneme_w2v2_llama32_1b_linear_peft_unfreeze_encoder
    - ++dataset_config.input_type=raw
  job:
    name: finetune_asr
    chdir: null
    override_dirname: ++dataset_config.dataset=speech_dataset,++dataset_config.file=src/slam_llm/datasets/speech_dataset.py:get_speech_dataset,++dataset_config.input_type=raw,++dataset_config.input_type=raw,++dataset_config.normalize=true,++dataset_config.train_data_path=/work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm/data/psst_phoneme/train.jsonl,++dataset_config.val_data_path=/work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm/data/psst_phoneme/validation.jsonl,++log_config.use_wandb=true,++log_config.wandb_exp_name=psst_phoneme_w2v2_llama32_1b_linear_peft_unfreeze_encoder,++model_config.encoder2_name=,++model_config.encoder2_path=,++model_config.encoder_dim=1024,++model_config.encoder_name=w2v2,++model_config.encoder_path=vitouphy/wav2vec2-xls-r-300m-timit-phoneme,++model_config.encoder_projector=linear,++model_config.encoder_projector_ds_rate=5,++model_config.llm_dim=2048,++model_config.llm_name=llama32_1b,++model_config.llm_path=/work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm/models/Llama-3.2-1B-Instruct,++model_config.normalize=true,++train_config.batch_size_training=1,++train_config.batching_strategy=custom,++train_config.freeze_encoder2=true,++train_config.freeze_encoder=false,++train_config.freeze_llm=false,++train_config.lr=1e-4,++train_config.model_name=asr,++train_config.num_epochs=10,++train_config.num_workers_dataloader=1,++train_config.output_dir=/work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm/out/psst_phoneme_w2v2_llama32_1b_linear_peft_unfreeze_encoder,++train_config.resume_epoch=1,++train_config.resume_step=0,++train_config.total_steps=100000,++train_config.use_fp16=true,++train_config.use_peft=true,++train_config.val_batch_size=1,++train_config.validation_interval=3000,++train_config.warmup_steps=1000
    id: ???
    num: ???
    config_name: null
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: ''
      schema: structured
      provider: schema
    output_dir: /work/van-speech-nlp/jindaznb/jslpnb/mllm_experiments/slam-llm/out/psst_phoneme_w2v2_llama32_1b_linear_peft_unfreeze_encoder
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
